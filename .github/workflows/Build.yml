name: Build
# inspired from
# - https://github.com/android/nowinandroid/blob/main/.github/workflows/Build.yaml
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Check lint
        run: ./gradlew lint

      - name: Build all build type and flavor permutations
        run: ./gradlew assemble

      - name: Run local tests
        run: ./gradlew test

      - name: Upload lint reports (HTML)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lint-reports
          path: '**/build/reports/lint-results-*.html'

      - name: Upload test results (XML)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/build/test-results/test*UnitTest/**.xml'

#  androidTest:
#    needs: build
#    runs-on: macos-latest # enables hardware acceleration in the virtual machine
#    timeout-minutes: 55
#    strategy:
#      matrix:
#        api-level: [ 29 ]
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Copy CI gradle.properties
#        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 17
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#
#      - name: Setting up AVD cache
#        uses: actions/cache@v3
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-${{ matrix.api-level }}
#
#      - name: Create AVD and generate snapshot for caching
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: false
#          script: echo "Generated AVD snapshot for caching."
#
#      - name: Build AndroidTest apps
#        run: ./gradlew packageDebug packageDebugAndroidTest --daemon
#
#      - name: Run instrumentation tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          force-avd-creation: false
#          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: true
#          disk-size: 6000M
#          heap-size: 600M
#          script: |
#            adb uninstall "me.varoa.studentprofiles.core.test"
#            ./gradlew connectedDebugAndroidTest --daemon
#
#      - name: Upload test reports
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-reports-${{ matrix.api-level }}
#          path: '**/build/reports/androidTests'
